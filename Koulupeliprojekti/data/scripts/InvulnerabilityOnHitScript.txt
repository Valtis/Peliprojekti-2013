# initialize statics that are shared between functions
(statics invTimeLeft owningEntity)

# register function onDamageTaken as callback when entity takes damage
# parameters: pointer to the entity, pointer to the VMState. 
(fn initialize (entity state)
  (
    (setvalue invTimeLeft 0)
    (setvalue owningEntity entity)
    # 9 = MessageType::ON_DAMAGE_TAKEN, 4 = Priority::HIGHEST
    (invokenative "RegisterMessageHandler" entity state 10 4 "onDamageTaken")  
  )
)


(fn update (ticksPassed) 
  (
    (if (> invTimeLeft 0)
      (
        (setvalue invTimeLeft (- invTimeLeft ticksPassed))
        (if (< invTimeLeft 0) 
          (
            (setvalue invTimeLeft 0)
          )
        )
      )  
    )
  )
)

(fn onDamageTaken (message)
  (    
    (if (= invTimeLeft 0)
      (
        (setvalue invTimeLeft 6000) # how many frames entity is invulnerable
        (invokenative "SendBlinkMessage" owningEntity invTimeLeft)
        (return 0)
      )
      ((return 1))
    )
  )
)