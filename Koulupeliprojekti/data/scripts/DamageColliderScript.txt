(statics owningEntity)

(fn initialize (entity state) 
  (
    (setvalue owningEntity entity)
    # 7 = MessageType::COLLISION, 3 = Priority::HIGH
    (invokenative "RegisterMessageHandler" owningEntity state 7 3 "damageCollider")
  )    
)

(fn getfaction (entity) 
  (
    (return (invokenative "GetEntityFaction" entity))
  )
)

(fn damageCollider (message)
  (locals collisionEntityArray counter length myfaction otherentity otherfaction)
  (
    (setvalue myfaction (getfaction owningEntity))
    (setvalue collisionEntityArray (invokenative "CollisionMessageGetEntities" message))
    (setvalue counter 0)
    (setvalue length (arraylength collisionEntityArray))
    (while (< counter length) 
      (
        (setvalue otherentity (readarray collisionEntityArray counter))
        (setvalue otherfaction (getfaction otherentity))
        (if (or (= myfaction -1) (= otherfaction -1) (not (= myfaction otherfaction)))
          (
            (invokenative "SendTakeDamageMessage" otherentity 1)
          )
        )
          (setvalue counter (+ counter 1))
      )
    ) 
    (return 0) # pass the message onwards
  )
)