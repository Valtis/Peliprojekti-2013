statics
  string RegisterMessageHandler as RegisterMessageHandler
  string BlinkMessage as BlinkMessage
  string SendBlinkMessage as SendBlinkMessage
  string onDamageTaken as OnDamageTaken # script function name
  integer 0 as InvTimeLeft
endstatics

# register function onDamageTaken as callback when entity takes damage
# parameters: pointer to the entity, pointer to the VMState
function initialize
  locals
  endlocals
  PushInteger 10 # messagetype::takedamage
  PushInteger 4 # Priority::Highest
  LoadStatic OnDamageTaken
  LoadStatic RegisterMessageHandler
  InvokeNative
endfunction


# arguments: How many ticks have passed since last update. Unused
function update
  locals
  endlocals
endfunction

# if InvTimeLeft is nonzero, blocks the damage message 
# if InvTimeLeft is zero, send blinking message, set InvTimeLeft to InvPeriod and let the message pass
# arguments: Pointer to DamageTaken-message (unused)

function onDamageTaken
  locals
    time
  endlocals
  LoadStatic InvTimeLeft 
  JumpIfZero startInvulnerability  
  LoadStatic StopHandling 
  Return 
  
  label startInvulnerability
  
  LoadStatic InvPeriod
  StoreLocal time # store this into local variable time
  LoadLocal time
  StoreStatic InvTimeLeft # store this into static variable
  LoadLocal time
  LoadStatic SendBlinkMessage 
  InvokeNative
  LoadStatic ContinueHandling
  Return
endfunction