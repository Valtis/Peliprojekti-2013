statics
  string RegisterMessageHandler as RegisterMessageHandler
  string SendBlinkMessage as SendBlinkMessage
  string onDamageTaken as OnDamageTaken # script function name
  integer 0 as InvTimeLeft
  native_pointer 0 as owningEntity
endstatics

# register function onDamageTaken as callback when entity takes damage
# parameters: pointer to message interface class, pointer to the entity, pointer to the VMState
function initialize
  locals
    state
  endlocals
  
  StoreLocal state
  StoreStatic owningEntity
  
  LoadLocal state  
  PushInteger 10 # messagetype::takedamage
  PushInteger 4 # Priority::Highest
  LoadStatic OnDamageTaken
  LoadStatic owningEntity
  LoadStatic RegisterMessageHandler
  InvokeNative # call entity->RegisterMessageHandler(state, MessageType::TakeDamage, Priority::Highest, "OnDamageTaken") 
  
endfunction


# arguments: How many ticks have passed since last update. 
function update
  locals
    ticksPassed
  endlocals
   
  DoubleToInteger
  StoreLocal ticksPassed
  LoadStatic InvTimeLeft
  JumpIfZero end # if zero, no need to do anything
  
  #update invulnerability period
  LoadStatic InvTimeLeft
  LoadLocal ticksPassed
  IntegerSubtract
  StoreStatic InvTimeLeft
  LoadStatic InvTimeLeft
  
  JumpIfNegative fixValue
  Return
  
  
  # if value is now negative, set it back to zero
  Label fixValue
  PushInteger 0
  StoreStatic InvTimeLeft
  
  Label end
  
  
endfunction

# if InvTimeLeft is nonzero, blocks the damage message 
# if InvTimeLeft is zero, send blinking message, set InvTimeLeft to InvPeriod and let the message pass
# arguments: Pointer to DamageTaken-message (unused)

function onDamageTaken
  locals
    time 
  endlocals
  LoadStatic InvTimeLeft 
  JumpIfZero startInvulnerability  
  PushInteger 1 # StopHandling
  Return 
  
  Label startInvulnerability
  
  PushInteger 60 # invulnerable for 60 frames
  StoreLocal time # store this into local variable time
  LoadLocal time
  
  StoreStatic InvTimeLeft # store this into static variable

  LoadStatic owningEntity
  LoadLocal time
  LoadStatic SendBlinkMessage 
  InvokeNative # call messageInterface->SendBlinkMessage(owningEntity, time)

  PushInteger 0 # continue handling
endfunction
