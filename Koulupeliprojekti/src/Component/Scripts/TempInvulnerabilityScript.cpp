#include "Component/Scripts/TempInvulnerabilityScript.h"
#include "Message/MessageFactory.h"
#include "Entity/Entity.h"
#define DELTA 0.0000001
void TempInvulnerabilityScript::OnAttatchingToEntity()
{
  GetOwner()->RegisterMessageHandler(MessageType::TAKE_DAMAGE, Priority::HIGHEST, 
    [=](Message *msg)
    {
      return HandleTakeDamageMessage(msg);
    }
    );
}

void TempInvulnerabilityScript::Update(double ticksPassed)
{
  if (m_invulnerabilityTimeLeft > DELTA)
  {
    m_invulnerabilityTimeLeft -= ticksPassed;
    if (m_invulnerabilityTimeLeft < DELTA)
    {
      m_invulnerabilityTimeLeft = 0;
    }
  }
}

MessageHandling TempInvulnerabilityScript::HandleTakeDamageMessage(Message *msg)
{
  if (m_invulnerabilityTimeLeft < DELTA)
  {
    m_invulnerabilityTimeLeft = m_invulnerabilityPeriodLength;
    auto msg = MessageFactory::CreateStartBlinkingMessage(m_invulnerabilityPeriodLength);
    GetOwner()->SendMessage(msg.get());
    return MessageHandling::PASS_FORWARD;
  }

  return MessageHandling::STOP_HANDLING;
}